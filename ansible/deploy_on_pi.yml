# -- DEPLOY_ON_PI.yml playbook --
# To use postgresql plugins, do not forget to install community general with the line:
#   ansible-galaxy collection install community.general
# Launch this playbook with :
#   ansible-playbook -i hosts deploy_on_pi.yml --verbose
#
---
- name: Deployment on Raspberry PI 3B+
  hosts: all
  gather_facts: no
  remote_user: root
  become: yes
  tasks:
    - name: Add EPEL repository for armhfp
      yum_repository:
        name: epel_release_armhfp
        description: Epel release for armhfp
        baseurl: https://armv7.dev.centos.org/repodir/epel-pass-1/
        enabled: yes
        gpgcheck: no
        state: present

    - name: Create Container directory if it does not exist
      file:
        path: /opt/lxc/containers/
        state: directory
        mode: '0755'
        recurse: yes

    - name: Installing all packages
      yum:
        name:
          - vim
          - git
          - zsh
          - python-lxc
          - lxc
          - lxc-templates
          - libcap-devel
          - libcgroup
          - wget
          - bridge-utils
          - lxc-extra
          - debootstrap
          - libvirt
          - perl
          - gpg
        state: present
        update_cache: yes

    - name: Prepare virtualisation service
      systemd:
        name: libvirtd
        enabled: yes
        state: started

    - name: Prepare LXC service
      systemd:
        name: lxc
        enabled: yes
        state: started

    - name: Destroy existing LXC container
      community.general.lxc_container:
        name: dp_container
        state: absent

    - name: Create and Start LXC container
      community.general.lxc_container:
        name: dp_container
        backing_store: dir
        container_log: true
        template: centos
        template_options: --release=7
        state: started
#        archive: true
#        archive_compression: none
#        archive_path: /opt/lxc/containers/

    - name: Install basic packages inside the container
      community.general.lxc_container:
        name: dp_container
        container_command: |
          yum -y update
          yum -y install vim git zsh httpd yum-utils mod_wsgi openssh-server postgresql postgresql-contrib postgresql-server postgresql-libs python-psycopg2

    - name: Create SRV directory inside the container
      community.general.lxc_container:
        name: dp_container
        container_command: |
          mkdir -p /opt/srv/dp/
          chmod -R 0755 /opt/srv/dp/


#    - name: Clone DP repo
#      git:
#        repo: 'https://github.com/zaffarelli/dramatis_personae.git'
#        dest: /opt/srv/dp/
#        clone: yes
#        update: no
#    - name: Checkout DP repo
#      git:
#        repo: 'https://github.com/zaffarelli/dramatis_personae.git'
#        dest: /opt/srv/dp/
#        version: master
#        update: no
##    - name: Initialize postgresql database
##      command: "postgresql-setup initdb"
#    - name: Start postgresql
#      service:
#        name: postgresql
#        state: started
#        enabled: yes
#
#    - name: Create postgresql user dp
#      community.general.postgresql_user:
#        name: dp
#        password: dp
#        encrypted: yes
#    - name: Create postgresql database dpdb
#      community.general.postgresql_db:
#        name: dpdb
#        owner: dp
#
#    - name: Write the apache config file
#      file:
#        src: /opt/srv/dp/scripts/deploy/httpd_dp.conf
#        dest: /etc/httpd/conf.d/httpd_dp.conf
#        state: hard
#    - name: Start httpd
#      service:
#        name: httpd
#        state: restarted
#        enabled: yes

...